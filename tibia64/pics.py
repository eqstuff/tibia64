import sys, os, struct

import PIL
from PIL import Image

palette_r = []
palette_g = []
palette_b = []

try:

    with open('tibia.pal', 'rb') as f:

        for i in range(0, 256):

            bytes = f.read(1)
            r = struct.unpack('b', bytes)[0]

            palette_r.append(r)

            bytes = f.read(1)
            g = struct.unpack('b', bytes)[0]

            palette_g.append(g)

            bytes = f.read(1)
            b = struct.unpack('b', bytes)[0]

            palette_b.append(b)

    f.close()

except IOError:

    print 'Error: tibia.pal file not found!'
    print 'Using hard-coded palette...'

    palette_r = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    palette_g = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,51,51,51,51,51,51,102,102,102,102,102,102,-103,-103,-103,-103,-103,-103,-52,-52,-52,-52,-52,-52,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,51,51,51,51,51,51,102,102,102,102,102,102,-103,-103,-103,-103,-103,-103,-52,-52,-52,-52,-52,-52,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,51,51,51,51,51,51,102,102,102,102,102,102,-103,-103,-103,-103,-103,-103,-52,-52,-52,-52,-52,-52,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,51,51,51,51,51,51,102,102,102,102,102,102,-103,-103,-103,-103,-103,-103,-52,-52,-52,-52,-52,-52,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,51,51,51,51,51,51,102,102,102,102,102,102,-103,-103,-103,-103,-103,-103,-52,-52,-52,-52,-52,-52,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,51,51,51,51,51,51,102,102,102,102,102,102,-103,-103,-103,-103,-103,-103,-52,-52,-52,-52,-52,-52,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    palette_b = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,0,51,102,-103,-52,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

def extract_pic(pic):

    try:

        with open(pic, 'rb') as f:

            if not os.path.exists('pics'):

                print('Creating pics folder...')

                os.makedirs('pics')

            print('Extracting ' + pic + '...')

            bytes = f.read(2)
            width = struct.unpack('h', bytes)[0]

            bytes = f.read(2)
            height = struct.unpack('h', bytes)[0]

            num_pixels = width * height

            im = Image.new('RGB', (width, height), (255, 0, 255))

            pixels = im.load()

            print('Resolution: ' + str(width) + 'x' + str(height) + ' (' + str(num_pixels) + ' pixels)')

            for i in range(0, num_pixels - 1):

                bytes = f.read(1)
                color = struct.unpack('b', bytes)[0]

                r = palette_r[color] & 0xFF
                g = palette_g[color] & 0xFF
                b = palette_b[color] & 0xFF

                x = i % width
                y = i / width

                pixels[x, y] = (r, g, b)

        pic = pic[:-4]

        pic = pic.lower()

        im.save('pics/' + pic + '.bmp')

        del im

        print('Success!')

        f.close()

    except IOError:

       print 'Error: ' + pic + ' file not found!'

print('Old Tibia Picture Extractor')

extract_pic('FONT.PIC')
extract_pic('INVENTRY.PIC')
extract_pic('STATUS.PIC')
extract_pic('TIBIA.PIC')
extract_pic('WOOD.PIC')
